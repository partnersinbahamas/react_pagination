{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","items","total","perPage","currentPage","onPageChange","from","to","pagesCount","Math","ceil","pageItems","i","push","renderItem","slice","className","classNames","disabled","href","onClick","map","item","active","onClickHandle","length","numbers","n","getNumbers","App","useState","itemsPerPage","setPerPage","setCurrentPage","itemsStart","itemsEnd","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"kNAaaA,EAA8B,SAAC,GAiB1C,IATK,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,KACAC,EACI,EADJA,GAEMC,EAAaC,KAAKC,KAAKR,EAAQC,GAC/BQ,EAAY,GAOTC,EAAI,EAAGA,GAAKJ,EAAYI,IAC/BD,EAAUE,KAAKD,GAGjB,IAAME,EAAab,EAAMc,MAAMT,EAAO,EAAGC,GAczC,OACE,qCACE,qBAAIS,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBd,IAHhB,SAME,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBf,EACfgB,QA1BW,WACC,IAAhBhB,GACFC,EAAaD,EAAc,IAmBvB,oBAWDO,EAAUU,KAAI,SAACC,GACd,OACE,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQnB,IAAgBkB,IAH9B,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAvDD,SAACE,GACrBjB,EAAaiB,GAsDcE,CAAcF,IAJ/B,SAMGA,SAMT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUd,IAAgBO,EAAUc,SAH1C,SAME,mBACE,UAAQ,WACRT,UAAU,YACVG,KAAK,QACL,gBAAef,IAAgBO,EAAUc,OACzCL,QAzDW,WACfhB,IAAgBO,EAAUc,QAC5BpB,EAAaD,EAAc,IAkDvB,uBAYJ,6BACGU,EAAWO,KAAI,SAACC,GACf,OAAO,oBAAI,UAAQ,OAAZ,SAAoBA,aCtGrC,IAAMrB,ECNC,SAAoBK,EAAcC,GAGvC,IAFA,IAAMmB,EAAU,GAEPC,EAAIrB,EAAMqB,GAAKpB,EAAIoB,GAAK,EAC/BD,EAAQb,KAAKc,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBP,KAAI,SAAAM,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAmCC,mBAAS,GAA5C,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB6B,EAApB,KACM/B,EAAQD,EAAMwB,OAEdS,EAAaH,GAAgB3B,EAAc,GAAK,EAClD+B,EAAW,EAGbA,EADED,EAAaH,EAAe7B,EACnBA,EAEA6B,EAAe3B,EAU5B,OACE,sBAAKY,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWZ,EADX,mBACiC8B,EADjC,cACiDC,EADjD,eACgEjC,EADhE,OAIA,sBAAKc,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAON,EACPO,SAtBa,SAACC,GACtB,IAAQF,EAAUE,EAAMC,OAAhBH,MAERL,GAAYK,GACZJ,EAAe,IAaT,UAOE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAOF,cAAC,EAAD,CACEf,MAAOA,EACPC,MAAOA,EACPC,QAAS4B,EACT3B,YAAaA,EACbC,aAAc4B,EACd3B,KAAM4B,EACN3B,GAAI4B,QEjEZO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a16de3af.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  items: string[],\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (number: number) => void,\n  from: number,\n  to:number,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  from,\n  to,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const pageItems = [];\n\n  const onClickHandle = (item: number) => {\n    onPageChange(item);\n  };\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 1; i <= pagesCount; i++) {\n    pageItems.push(i);\n  }\n\n  const renderItem = items.slice(from - 1, to);\n\n  const onButtonPrev = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const onButtonNext = () => {\n    if (currentPage !== pageItems.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={onButtonPrev}\n          >\n            «\n          </a>\n        </li>\n\n        {pageItems.map((item) => {\n          return (\n            <li\n              className={classNames(\n                'page-item',\n                { active: currentPage === item },\n              )}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${item}`}\n                onClick={() => onClickHandle(item)}\n              >\n                {item}\n              </a>\n            </li>\n          );\n        })}\n\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === pageItems.length },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pageItems.length}\n            onClick={onButtonNext}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {renderItem.map((item) => {\n          return <li data-cy=\"item\">{item}</li>;\n        })}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const total = items.length;\n\n  const itemsStart = itemsPerPage * (currentPage - 1) + 1;\n  let itemsEnd = 0;\n\n  if (itemsStart + itemsPerPage > total) {\n    itemsEnd = total;\n  } else {\n    itemsEnd = itemsPerPage * currentPage;\n  }\n\n  const onHandleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setPerPage(+value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsStart} - ${itemsEnd} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={onHandleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n\n      <Pagination\n        items={items}\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n        from={itemsStart}\n        to={itemsEnd}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}